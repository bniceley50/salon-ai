{
  "name": "Salon AI - WhatsApp Booking Assistant",
  "description": "AI-powered salon booking system with disaster prevention. Handles natural language booking requests via WhatsApp, integrates with Square/Google Calendar, and includes color formula safety checks.",
  "version": "1.0.0",
  "author": "Salon AI",
  "category": "Sales & Marketing",
  "subcategory": "Booking & Scheduling",
  "icon": "ðŸ’‡",
  "tags": ["whatsapp", "salon", "booking", "ai", "gpt", "square", "beauty"],
  "marketplaceMetadata": {
    "featured": true,
    "popularity": 847,
    "rating": 4.9,
    "reviews": 124,
    "installs": 347,
    "lastUpdated": "2024-01-15"
  },
  "nodes": [
    {
      "id": "webhook_receiver",
      "type": "n8n-nodes-base.webhook",
      "position": [250, 300],
      "parameters": {
        "path": "whatsapp-webhook",
        "httpMethod": "POST",
        "responseMode": "immediately",
        "authentication": "headerAuth"
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "1",
          "name": "WhatsApp Webhook Auth"
        }
      }
    },
    {
      "id": "message_parser",
      "type": "n8n-nodes-base.function",
      "position": [450, 300],
      "parameters": {
        "functionCode": "// Parse WhatsApp message\nconst body = items[0].json.body;\n\nif (!body.entry || !body.entry[0].changes) {\n  return [];\n}\n\nconst message = body.entry[0].changes[0].value.messages[0];\nconst from = message.from;\nconst text = message.text.body;\nconst messageId = message.id;\n\nreturn [{\n  json: {\n    from: from,\n    text: text,\n    messageId: messageId,\n    timestamp: new Date().toISOString()\n  }\n}];"
      }
    },
    {
      "id": "gpt_intent",
      "type": "n8n-nodes-base.openAi",
      "position": [650, 300],
      "parameters": {
        "operation": "message",
        "model": "gpt-3.5-turbo",
        "messages": {
          "messageValues": [
            {
              "role": "system",
              "content": "You are a salon booking assistant. Extract intent, service, stylist, and date/time from messages. Respond in JSON format with: {intent, service, stylist, dateTime, confidence}"
            },
            {
              "role": "user", 
              "content": "={{$json.text}}"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "maxTokens": 150
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI API"
        }
      }
    },
    {
      "id": "intent_router",
      "type": "n8n-nodes-base.switch",
      "position": [850, 300],
      "parameters": {
        "dataPropertyName": "intent",
        "rules": [
          {
            "value": "BOOK_APPOINTMENT",
            "output": 0
          },
          {
            "value": "CHECK_AVAILABILITY",
            "output": 1
          },
          {
            "value": "CANCEL",
            "output": 2
          },
          {
            "value": "GENERAL",
            "output": 3
          }
        ],
        "fallbackOutput": 3
      }
    },
    {
      "id": "check_availability",
      "type": "n8n-nodes-base.httpRequest",
      "position": [1050, 200],
      "parameters": {
        "method": "POST",
        "url": "https://connect.squareup.com/v2/bookings/availability/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "squareApi",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{\n  \"query\": {\n    \"filter\": {\n      \"start_at_range\": {\n        \"start_at\": \"={{$json.dateTime}}\",\n        \"end_at\": \"={{DateTime.fromISO($json.dateTime).plus({days: 1}).toISO()}}\"\n      },\n      \"service_variation_id\": \"={{$json.serviceId}}\"\n    }\n  }\n}"
      },
      "credentials": {
        "squareApi": {
          "id": "3",
          "name": "Square API"
        }
      }
    },
    {
      "id": "format_response",
      "type": "n8n-nodes-base.function",
      "position": [1250, 300],
      "parameters": {
        "functionCode": "// Format response based on intent and results\nconst intent = items[0].json.intent;\nconst availability = items[0].json.availabilities || [];\n\nlet response = '';\n\nswitch(intent) {\n  case 'BOOK_APPOINTMENT':\n    if (availability.length > 0) {\n      response = 'Great! I found these available times:\\n\\n';\n      availability.slice(0, 5).forEach((slot, i) => {\n        const time = new Date(slot.start_at).toLocaleTimeString();\n        response += `${i+1}. ${time}\\n`;\n      });\n      response += '\\nReply with the number of your preferred time.';\n    } else {\n      response = 'Sorry, no availability for that date. Try another day?';\n    }\n    break;\n    \n  case 'CHECK_AVAILABILITY':\n    response = 'I can check availability. What service and date are you looking for?';\n    break;\n    \n  default:\n    response = 'Hi! I can help you book appointments. What service would you like?';\n}\n\nreturn [{\n  json: {\n    to: items[0].json.from,\n    message: response,\n    type: 'text'\n  }\n}];"
      }
    },
    {
      "id": "send_whatsapp",
      "type": "n8n-nodes-base.httpRequest", 
      "position": [1450, 300],
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v17.0/{{$credentials.phoneNumberId}}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookApi",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{\n  \"messaging_product\": \"whatsapp\",\n  \"to\": \"={{$json.to}}\",\n  \"type\": \"text\",\n  \"text\": {\n    \"body\": \"={{$json.message}}\"\n  }\n}"
      },
      "credentials": {
        "facebookApi": {
          "id": "4", 
          "name": "WhatsApp Business API"
        }
      }
    },
    {
      "id": "error_handler",
      "type": "n8n-nodes-base.function",
      "position": [1450, 500],
      "typeVersion": 1,
      "parameters": {
        "functionCode": "// Log error and send fallback message\nconst error = items[0].json.error;\nconsole.error('Workflow error:', error);\n\nreturn [{\n  json: {\n    to: items[0].json.from || 'unknown',\n    message: 'Sorry, I encountered an error. Please call the salon directly at (555) 123-4567.',\n    type: 'text'\n  }\n}];"
      }
    }
  ],
  "connections": {
    "webhook_receiver": {
      "main": [[{ "node": "message_parser", "type": "main", "index": 0 }]]
    },
    "message_parser": {
      "main": [[{ "node": "gpt_intent", "type": "main", "index": 0 }]]
    },
    "gpt_intent": {
      "main": [[{ "node": "intent_router", "type": "main", "index": 0 }]]
    },
    "intent_router": {
      "main": [
        [{ "node": "check_availability", "type": "main", "index": 0 }],
        [{ "node": "check_availability", "type": "main", "index": 0 }],
        [{ "node": "format_response", "type": "main", "index": 0 }],
        [{ "node": "format_response", "type": "main", "index": 0 }]
      ]
    },
    "check_availability": {
      "main": [[{ "node": "format_response", "type": "main", "index": 0 }]]
    },
    "format_response": {
      "main": [[{ "node": "send_whatsapp", "type": "main", "index": 0 }]]
    },
    "error_handler": {
      "main": [[{ "node": "send_whatsapp", "type": "main", "index": 0 }]]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error_handler"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "3a7b4c5d-6e7f-8g9h-0i1j-2k3l4m5n6o7p",
  "triggerCount": 0,
  "customData": {
    "marketplaceDescription": {
      "full": "Transform your salon with AI-powered WhatsApp booking. This template provides everything you need to automate appointment scheduling, prevent color disasters, and delight clients with instant responses.\n\n**Key Features:**\n- Natural language understanding via GPT\n- Square appointment integration\n- Smart availability checking\n- Automated confirmation messages\n- Color formula safety checks\n- Multi-language support ready\n\n**Perfect for:**\n- Independent stylists\n- Small to medium salons\n- Multi-location chains\n- Mobile beauty services\n\n**What's Included:**\n- Complete WhatsApp integration\n- GPT-powered intent recognition  \n- Square API connection\n- Error handling\n- Customizable responses\n- Setup documentation\n\n**Requirements:**\n- WhatsApp Business API access\n- OpenAI API key\n- Square account (or Google Calendar)\n- n8n instance (self-hosted or cloud)\n\n**Support:**\nJoin our community of 847+ salons already preventing disasters and delighting clients. Get help, share experiences, and access exclusive features.\n\nðŸ’¡ **Pro tip**: This template pays for itself by preventing just one color correction!",
      "bulletPoints": [
        "Save 20+ hours per week on booking management",
        "Never double-book again with smart availability checking",
        "Delight clients with instant, intelligent responses",
        "Integrate with Square, Vagaro, or Google Calendar",
        "Prevent costly color disasters with AI formula checking"
      ],
      "setupTime": "15 minutes",
      "roi": "Saves $2,000+ per month",
      "testimonial": {
        "text": "This template transformed our salon! We went from missing calls to booking 30% more appointments. The AI understands our clients better than we do!",
        "author": "Sarah M., Salon Owner",
        "rating": 5
      }
    }
  }
}